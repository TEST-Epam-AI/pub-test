name: Build and SonarCloud Analysis

on:
  push:
    branches:
      - '**'  # Trigger for all branches
  pull_request:
    branches:
      - '**'  # Trigger for all pull requests targeting any branch
    types:
      - opened
      - synchronize
      - reopened

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # Step 2: Set up Python
      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: 3.x  # Use the latest Python 3 version

      # Step 3: Install Python Dependencies
      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install requests

      # Step 4: Run SonarCloud Analysis
      - name: SonarQube Cloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.PYSONAR }}

      # Step 5: Export Issues to CSV
      - name: Export SonarCloud Issues to CSV
        run: |
          echo "import requests, csv, sys

token = '${{ secrets.PYSONAR }}'
headers = {'Authorization': f'Bearer {token}'}

# API parameters
params = {
    'componentKeys': 'TEST-Epam-AI_pub-python',
    'branch': 'python',
    'ps': 500,
    'p': 1
}

issues_url = 'https://sonarcloud.io/api/issues/search'

all_issues = []
while True:
    response = requests.get(issues_url, headers=headers, params=params)
    response.raise_for_status()
    data = response.json()
    all_issues.extend(data.get('issues', []))
    if params['p'] * params['ps'] >= data.get('total', 0):
        break
    params['p'] += 1

with open('sonarcloud_issues.csv', 'w', newline='', encoding='utf-8') as file:
    writer = csv.writer(file)
    writer.writerow([
        'Key', 'Rule', 'Severity', 'Type', 'Message', 'Line',
        'Component', 'Effort', 'Debt', 'Status', 'Resolution',
        'Creation Date', 'Update Date'
    ])
    for issue in all_issues:
        writer.writerow([
            issue.get('key', 'N/A'),
            issue.get('rule', 'N/A'),
            issue.get('severity', 'N/A'),
            issue.get('type', 'N/A'),
            issue.get('message', 'N/A'),
            issue.get('line', 'N/A'),
            issue.get('component', 'N/A'),
            issue.get('effort', 'N/A'),
            issue.get('debt', 'N/A'),
            issue.get('status', 'N/A'),
            issue.get('resolution', 'N/A'),
            issue.get('creationDate', 'N/A'),
            issue.get('updateDate', 'N/A'),
        ])
" > export_sonarcloud_issues.py
          python3 export_sonarcloud_issues.py

      # Step 6: Upload CSV as Artifact
      - name: Upload CSV Report
        uses: actions/upload-artifact@v3
        with:
          name: sonarcloud_issues
          path: sonarcloud_issues.csv
